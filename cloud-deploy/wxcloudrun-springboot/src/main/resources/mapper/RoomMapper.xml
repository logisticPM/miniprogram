<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tencent.wxcloudrun.dao.RoomMapper">

    <resultMap id="roomMapper" type="com.tencent.wxcloudrun.model.Room">
        <id property="id" column="id"/>
        <result property="activityId" column="activityId"/>
        <result property="buildingNumber" column="buildingNumber"/>
        <result property="unitNumber" column="unitNumber"/>
        <result property="floorNumber" column="floorNumber"/>
        <result property="roomNumber" column="roomNumber"/>
        <result property="houseType" column="houseType"/>
        <result property="status" column="status"/>
        <result property="phoneNumber" column="phoneNumber"/>
        <result property="grabTime" column="grabTime" javaType="java.time.LocalDateTime" />
        <result property="createdAt" column="createdAt" javaType="java.time.LocalDateTime" />
        <result property="updatedAt" column="updatedAt" javaType="java.time.LocalDateTime" />
    </resultMap>

    <insert id="createRoom" parameterType="com.tencent.wxcloudrun.model.Room" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO Rooms (
            activityId, buildingNumber, unitNumber, floorNumber, roomNumber, 
            houseType, status
        ) VALUES (
            #{activityId}, #{buildingNumber}, #{unitNumber}, #{floorNumber}, #{roomNumber}, 
            #{houseType}, #{status}
        )
    </insert>

    <insert id="batchCreateRooms" parameterType="java.util.List">
        INSERT INTO Rooms (
            activityId, buildingNumber, unitNumber, floorNumber, roomNumber, 
            houseType, status
        ) VALUES 
        <foreach collection="list" item="room" separator=",">
            (
            #{room.activityId}, #{room.buildingNumber}, #{room.unitNumber}, #{room.floorNumber}, #{room.roomNumber}, 
            #{room.houseType}, #{room.status}
            )
        </foreach>
    </insert>

    <select id="getRoomById" resultMap="roomMapper" parameterType="java.lang.Integer">
        SELECT id, activityId, buildingNumber, unitNumber, floorNumber, roomNumber, 
               houseType, status, phoneNumber, grabTime, createdAt, updatedAt
        FROM Rooms
        WHERE id = #{id}
    </select>

    <select id="getRoomsByActivityId" resultMap="roomMapper" parameterType="java.lang.Integer">
        SELECT id, activityId, buildingNumber, unitNumber, floorNumber, roomNumber, 
               houseType, status, phoneNumber, grabTime, createdAt, updatedAt
        FROM Rooms
        WHERE activityId = #{activityId}
        ORDER BY buildingNumber, unitNumber, floorNumber, roomNumber
    </select>

    <select id="getAvailableRoomsByActivityId" resultMap="roomMapper" parameterType="java.lang.Integer">
        SELECT id, activityId, buildingNumber, unitNumber, floorNumber, roomNumber, 
               houseType, status, phoneNumber, grabTime, createdAt, updatedAt
        FROM Rooms
        WHERE activityId = #{activityId} AND status = #{availableStatus}
        ORDER BY buildingNumber, unitNumber, floorNumber, roomNumber
    </select>

    <select id="getRoomsByIds" resultMap="roomMapper">
        SELECT id, activityId, buildingNumber, unitNumber, floorNumber, roomNumber, 
               houseType, status, phoneNumber, grabTime, createdAt, updatedAt
        FROM Rooms
        WHERE id IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <update id="updateRoomStatus" parameterType="map">
        UPDATE Rooms
        SET status = #{status}
        <if test="status == 'grabbed'">
            , phoneNumber = #{phoneNumber}
            , grabTime = NOW()
        </if>
        WHERE id = #{id} AND status = #{availableStatus}
    </update>

    <update id="batchUpdateRoomStatus" parameterType="map">
        UPDATE Rooms
        SET status = #{status}
        <if test="status == 'grabbed'">
            , phoneNumber = #{phoneNumber}
            , grabTime = NOW()
        </if>
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND status = #{availableStatus}
    </update>

    <select id="getRoomsByPhoneNumber" resultMap="roomMapper">
        SELECT id, activityId, buildingNumber, unitNumber, floorNumber, roomNumber, 
               houseType, status, phoneNumber, grabTime, createdAt, updatedAt
        FROM Rooms
        WHERE phoneNumber = #{phoneNumber}
        ORDER BY grabTime DESC
    </select>
    
    <select id="getRoomsByBuildingAndFloor" resultMap="roomMapper">
        SELECT id, activityId, buildingNumber, unitNumber, floorNumber, roomNumber, 
               houseType, status, phoneNumber, grabTime, createdAt, updatedAt
        FROM Rooms
        WHERE activityId = #{activityId} 
          AND buildingNumber = #{buildingNumber} 
          AND floorNumber = #{floorNumber}
        ORDER BY unitNumber, roomNumber
    </select>
    
    <select id="getBuildingNumbersByActivityId" resultType="java.lang.String">
        SELECT DISTINCT buildingNumber
        FROM Rooms
        WHERE activityId = #{activityId}
        ORDER BY buildingNumber
    </select>
    
    <select id="getFloorsByBuildingNumber" resultType="java.lang.Integer">
        SELECT DISTINCT floorNumber
        FROM Rooms
        WHERE activityId = #{activityId} AND buildingNumber = #{buildingNumber}
        ORDER BY floorNumber
    </select>
    
    <select id="getUserGrabRecords" resultType="java.util.HashMap">
        SELECT 
            r.id AS roomId,
            r.activityId,
            r.buildingNumber,
            r.unitNumber,
            r.floorNumber,
            r.roomNumber,
            r.houseType,
            r.status,
            r.grabTime,
            a.title AS activityTitle,
            a.description AS activityDescription,
            a.startTime AS activityStartTime,
            a.endTime AS activityEndTime,
            a.status AS activityStatus
        FROM 
            Rooms r
        JOIN 
            Activities a ON r.activityId = a.id
        WHERE 
            r.phoneNumber = #{phoneNumber}
        ORDER BY 
            r.grabTime DESC
    </select>

</mapper>
